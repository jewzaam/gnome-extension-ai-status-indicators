name: PR Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run ESLint
      run: npm run lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gnome-version: [45, 46, 47, 48]
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run tests for GNOME ${{ matrix.gnome-version }}
      run: GNOME_VERSION=${{ matrix.gnome-version }} npm test
      env:
        GNOME_VERSION: ${{ matrix.gnome-version }}
    - name: Upload coverage to Codecov
      if: matrix.gnome-version == 48
      uses: codecov/codecov-action@v4

  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Validate extension UUID consistency
      run: |
        UUID_METADATA=$(grep -o '"uuid": "[^"]*"' metadata.json | cut -d'"' -f4)
        UUID_INSTALL=$(grep -o 'EXTENSION_UUID="[^"]*"' install.sh | cut -d'"' -f2)
        if [ "$UUID_METADATA" != "$UUID_INSTALL" ]; then
          echo "Extension UUID mismatch between metadata.json and install.sh"
          exit 1
        fi
    - name: Validate metadata GNOME versions
      run: |
        # Check that metadata.json includes all tested versions
        for version in 45 46 47 48; do
          if ! grep -q "\"$version\"" metadata.json; then
            echo "GNOME Shell version $version missing from metadata.json"
            exit 1
          fi
        done 